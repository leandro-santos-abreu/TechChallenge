// <auto-generated />
using System;
using Agenda.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Agenda.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240430225209_ImplementingAreaCode")]
    partial class ImplementingAreaCode
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Agenda.Domain.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Contacts", (string)null);
                });

            modelBuilder.Entity("Agenda.Domain.Entities.PhoneNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CellPhone")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AreaCode");

                    b.HasIndex("ContactId");

                    b.ToTable("PhoneNumber", (string)null);
                });

            modelBuilder.Entity("Agenda.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("86236288-10fa-467b-bc9b-21cc0facc89b"),
                            Password = "AEQhFqAVgpgrcsJHuIVbB+Wrb+TmY8XXijmVvfzvjo1bNuaQgsu+XukrY9Sfixi0oQ==",
                            UserName = "leandro.abreu"
                        });
                });

            modelBuilder.Entity("Agenda.Domain.ValueObjects.AreaCode", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(2)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Capital")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FederalUnity")
                        .IsRequired()
                        .HasMaxLength(19)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Code");

                    b.ToTable("AreaCodes", (string)null);

                    b.HasData(
                        new
                        {
                            Code = "61",
                            Capital = "Brasília",
                            FederalUnity = "Distrito Federal"
                        },
                        new
                        {
                            Code = "62",
                            Capital = "Goiânia",
                            FederalUnity = "Goiás"
                        },
                        new
                        {
                            Code = "64",
                            Capital = "Goiânia",
                            FederalUnity = "Goiás"
                        },
                        new
                        {
                            Code = "65",
                            Capital = "Cuiabá",
                            FederalUnity = "Mato Grosso"
                        },
                        new
                        {
                            Code = "66",
                            Capital = "Cuiabá",
                            FederalUnity = "Mato Grosso"
                        },
                        new
                        {
                            Code = "67",
                            Capital = "Campo Grande",
                            FederalUnity = "Mato Grosso do Sul"
                        },
                        new
                        {
                            Code = "82",
                            Capital = "Maceió",
                            FederalUnity = "Alagoas"
                        },
                        new
                        {
                            Code = "71",
                            Capital = "Salvador",
                            FederalUnity = "Bahia"
                        },
                        new
                        {
                            Code = "73",
                            Capital = "Salvador",
                            FederalUnity = "Bahia"
                        },
                        new
                        {
                            Code = "74",
                            Capital = "Salvador",
                            FederalUnity = "Bahia"
                        },
                        new
                        {
                            Code = "75",
                            Capital = "Salvador",
                            FederalUnity = "Bahia"
                        },
                        new
                        {
                            Code = "77",
                            Capital = "Salvador",
                            FederalUnity = "Bahia"
                        },
                        new
                        {
                            Code = "85",
                            Capital = "Fortaleza",
                            FederalUnity = "Ceará"
                        },
                        new
                        {
                            Code = "88",
                            Capital = "Fortaleza",
                            FederalUnity = "Ceará"
                        },
                        new
                        {
                            Code = "98",
                            Capital = "São Luís",
                            FederalUnity = "Maranhão"
                        },
                        new
                        {
                            Code = "99",
                            Capital = "São Luís",
                            FederalUnity = "Maranhão"
                        },
                        new
                        {
                            Code = "83",
                            Capital = "João Pessoa",
                            FederalUnity = "Paraíba"
                        },
                        new
                        {
                            Code = "81",
                            Capital = "Recife",
                            FederalUnity = "Pernambuco"
                        },
                        new
                        {
                            Code = "87",
                            Capital = "Recife",
                            FederalUnity = "Pernambuco"
                        },
                        new
                        {
                            Code = "86",
                            Capital = "Teresina",
                            FederalUnity = "Piauí"
                        },
                        new
                        {
                            Code = "89",
                            Capital = "Teresina",
                            FederalUnity = "Piauí"
                        },
                        new
                        {
                            Code = "84",
                            Capital = "Natal",
                            FederalUnity = "Rio Grande do Norte"
                        },
                        new
                        {
                            Code = "79",
                            Capital = "Aracaju",
                            FederalUnity = "Sergipe"
                        },
                        new
                        {
                            Code = "68",
                            Capital = "Rio Branco",
                            FederalUnity = "Acre"
                        },
                        new
                        {
                            Code = "96",
                            Capital = "Macapá",
                            FederalUnity = "Amapá"
                        },
                        new
                        {
                            Code = "92",
                            Capital = "Manaus",
                            FederalUnity = "Amazonas"
                        },
                        new
                        {
                            Code = "97",
                            Capital = "Manaus",
                            FederalUnity = "Amazonas"
                        },
                        new
                        {
                            Code = "91",
                            Capital = "Belém",
                            FederalUnity = "Pará"
                        },
                        new
                        {
                            Code = "93",
                            Capital = "Belém",
                            FederalUnity = "Pará"
                        },
                        new
                        {
                            Code = "94",
                            Capital = "Belém",
                            FederalUnity = "Pará"
                        },
                        new
                        {
                            Code = "69",
                            Capital = "Porto Velho",
                            FederalUnity = "Rondônia"
                        },
                        new
                        {
                            Code = "95",
                            Capital = "Boa Vista",
                            FederalUnity = "Roraima"
                        },
                        new
                        {
                            Code = "63",
                            Capital = "Palmas",
                            FederalUnity = "Tocantins"
                        },
                        new
                        {
                            Code = "27",
                            Capital = "Vitória",
                            FederalUnity = "Espírito Santo"
                        },
                        new
                        {
                            Code = "28",
                            Capital = "Vitória",
                            FederalUnity = "Espírito Santo"
                        },
                        new
                        {
                            Code = "31",
                            Capital = "Belo Horizonte",
                            FederalUnity = "Minas Gerais"
                        },
                        new
                        {
                            Code = "32",
                            Capital = "Belo Horizonte",
                            FederalUnity = "Minas Gerais"
                        },
                        new
                        {
                            Code = "33",
                            Capital = "Belo Horizonte",
                            FederalUnity = "Minas Gerais"
                        },
                        new
                        {
                            Code = "34",
                            Capital = "Belo Horizonte",
                            FederalUnity = "Minas Gerais"
                        },
                        new
                        {
                            Code = "35",
                            Capital = "Belo Horizonte",
                            FederalUnity = "Minas Gerais"
                        },
                        new
                        {
                            Code = "37",
                            Capital = "Belo Horizonte",
                            FederalUnity = "Minas Gerais"
                        },
                        new
                        {
                            Code = "38",
                            Capital = "Belo Horizonte",
                            FederalUnity = "Minas Gerais"
                        },
                        new
                        {
                            Code = "21",
                            Capital = "Rio de Janeiro",
                            FederalUnity = "Rio de Janeiro"
                        },
                        new
                        {
                            Code = "22",
                            Capital = "Rio de Janeiro",
                            FederalUnity = "Rio de Janeiro"
                        },
                        new
                        {
                            Code = "24",
                            Capital = "Rio de Janeiro",
                            FederalUnity = "Rio de Janeiro"
                        },
                        new
                        {
                            Code = "11",
                            Capital = "São Paulo",
                            FederalUnity = "São Paulo"
                        },
                        new
                        {
                            Code = "12",
                            Capital = "São Paulo",
                            FederalUnity = "São Paulo"
                        },
                        new
                        {
                            Code = "13",
                            Capital = "São Paulo",
                            FederalUnity = "São Paulo"
                        },
                        new
                        {
                            Code = "14",
                            Capital = "São Paulo",
                            FederalUnity = "São Paulo"
                        },
                        new
                        {
                            Code = "15",
                            Capital = "São Paulo",
                            FederalUnity = "São Paulo"
                        },
                        new
                        {
                            Code = "16",
                            Capital = "São Paulo",
                            FederalUnity = "São Paulo"
                        },
                        new
                        {
                            Code = "17",
                            Capital = "São Paulo",
                            FederalUnity = "São Paulo"
                        },
                        new
                        {
                            Code = "18",
                            Capital = "São Paulo",
                            FederalUnity = "São Paulo"
                        },
                        new
                        {
                            Code = "19",
                            Capital = "São Paulo",
                            FederalUnity = "São Paulo"
                        },
                        new
                        {
                            Code = "41",
                            Capital = "Curitiba",
                            FederalUnity = "Paraná"
                        },
                        new
                        {
                            Code = "42",
                            Capital = "Curitiba",
                            FederalUnity = "Paraná"
                        },
                        new
                        {
                            Code = "43",
                            Capital = "Curitiba",
                            FederalUnity = "Paraná"
                        },
                        new
                        {
                            Code = "44",
                            Capital = "Curitiba",
                            FederalUnity = "Paraná"
                        },
                        new
                        {
                            Code = "45",
                            Capital = "Curitiba",
                            FederalUnity = "Paraná"
                        },
                        new
                        {
                            Code = "46",
                            Capital = "Curitiba",
                            FederalUnity = "Paraná"
                        },
                        new
                        {
                            Code = "51",
                            Capital = "Porto Alegre",
                            FederalUnity = "Rio Grande do Sul"
                        },
                        new
                        {
                            Code = "53",
                            Capital = "Porto Alegre",
                            FederalUnity = "Rio Grande do Sul"
                        },
                        new
                        {
                            Code = "54",
                            Capital = "Porto Alegre",
                            FederalUnity = "Rio Grande do Sul"
                        },
                        new
                        {
                            Code = "55",
                            Capital = "Porto Alegre",
                            FederalUnity = "Rio Grande do Sul"
                        },
                        new
                        {
                            Code = "47",
                            Capital = "Florianópolis",
                            FederalUnity = "Santa Catarina"
                        },
                        new
                        {
                            Code = "48",
                            Capital = "Florianópolis",
                            FederalUnity = "Santa Catarina"
                        },
                        new
                        {
                            Code = "49",
                            Capital = "Florianópolis",
                            FederalUnity = "Santa Catarina"
                        });
                });

            modelBuilder.Entity("Agenda.Domain.Entities.Contact", b =>
                {
                    b.HasOne("Agenda.Domain.Entities.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Agenda.Domain.Entities.PhoneNumber", b =>
                {
                    b.HasOne("Agenda.Domain.ValueObjects.AreaCode", "AreaCodeEntity")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("AreaCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agenda.Domain.Entities.Contact", "Contact")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaCodeEntity");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("Agenda.Domain.Entities.Contact", b =>
                {
                    b.Navigation("PhoneNumbers");
                });

            modelBuilder.Entity("Agenda.Domain.Entities.User", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("Agenda.Domain.ValueObjects.AreaCode", b =>
                {
                    b.Navigation("PhoneNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
